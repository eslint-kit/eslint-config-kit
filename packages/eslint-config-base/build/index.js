"use strict";var r=require("path"),e=require("fs");function n(r){return r&&"object"==typeof r&&"default"in r?r:{default:r}}var o=n(r),s=n(e);function t(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}!function(r){const e=o.default,n=s.default;let a=void 0,i=void 0,c=void 0;for(let n=r;;){if(a){if(/[\\/]eslint[\\/]lib[\\/]cli-engine[\\/]cli-engine\.js$/i.test(n.filename)){c=e.join(e.dirname(n.filename),"../..");break}}else if(/[\\/]@eslint[\\/]eslintrc[\\/]lib[\\/]config-array-factory\.js$/i.test(n.filename)){const r=e.join(e.dirname(n.filename),"..");a=e.join(r,"lib/config-array-factory"),i=e.join(r,"lib/shared/relative-module-resolver")}if(!n.parent)break;n=n.parent}if(!c)for(let n=r;;){if(/[\\/]eslint[\\/]lib[\\/]cli-engine[\\/]config-array-factory\.js$/i.test(n.filename)){c=e.join(e.dirname(n.filename),"../.."),a=e.join(c,"lib/cli-engine/config-array-factory"),i=e.join(c,"lib/shared/relative-module-resolver");break}if(!n.parent)throw new Error("Failed to patch ESLint because the calling module was not recognized.\nIf you are using a newer ESLint version that may be unsupported, please create a GitHub issue:\nhttps://github.com/microsoft/rushstack/issues");n=n.parent}const l=n.readFileSync(e.join(c,"package.json")).toString(),u=JSON.parse(l).version,p=/^([0-9]+)\./.exec(u);if(!p)throw new Error("Unable to parse ESLint version: "+u);const f=Number(p[1]);if(!(f>=6&&f<=7))throw new Error(`The patch-eslint.js script has only been tested with ESLint version 6.x or 7.x. (Your version: ${u})\nConsider reporting a GitHub issue:\nhttps://github.com/microsoft/rushstack/issues`);const m=t(a).ConfigArrayFactory;if(!m.__patched){m.__patched=!0;const r=t(i),e=m.prototype._loadPlugin;m.prototype._loadPlugin=6===f?function(n,o,s){const t=r.resolve;try{return r.resolve=function(r,e){return t.call(this,r,o)},e.apply(this,arguments)}finally{r.resolve=t}}:function(n,o){const s=r.resolve;try{return r.resolve=function(r,e){return s.call(this,r,o.filePath)},e.apply(this,arguments)}finally{r.resolve=s}}}}({exports:{}});const a={js:[".js",".mjs",".jsx"],ts:[".ts",".tsx",".d.ts"],jsAndTs:[".js",".mjs",".jsx",".ts",".tsx",".d.ts"]};var i={plugins:["import","unicorn","sonarjs"],extends:["plugin:sonarjs/recommended"],env:{es6:!0},parserOptions:{ecmaVersion:2018,sourceType:"module"},settings:{...{"import/extensions":a.js,"import/resolver":{node:{extensions:a.js}},"import/core-modules":[],"import/ignore":["\\.(coffee|scss|css|less|hbs|svg|json)$"]}},rules:{...{"import/no-unresolved":["error",{commonjs:!0,caseSensitive:!0}],"import/no-anonymous-default-export":["error",{allowCallExpression:!1}],"import/export":"error","import/no-extraneous-dependencies":["error",{devDependencies:["test/**","tests/**","spec/**","**/__tests__/**","**/__mocks__/**","test.{js,jsx}","test-*.{js,jsx}","**/*{.,_}{test,spec}.{js,jsx}","**/jest.config.js","**/jest.setup.js","**/vue.config.js","**/webpack.config.js","**/webpack.config.*.js","**/rollup.config.js","**/rollup.config.*.js","**/gulpfile.js","**/gulpfile.*.js","**/Gruntfile{,.js}","**/protractor.conf.js","**/protractor.conf.*.js","**/karma.conf.js"],optionalDependencies:!1}],"import/no-mutable-exports":"error","import/no-amd":"error","import/first":"error","import/no-duplicates":"error","import/extensions":["warn","ignorePackages",{js:"never",mjs:"never",jsx:"never"}],"import/newline-after-import":"warn","import/no-webpack-loader-syntax":"error","import/no-self-import":"error","import/no-cycle":["error",{maxDepth:1/0}],"import/no-useless-path-segments":["warn",{commonjs:!0}],"import/order":["warn",{groups:["builtin","external","internal","parent","sibling","index"]}]},"for-direction":"error","getter-return":"error","no-async-promise-executor":"error","no-compare-neg-zero":"error","no-cond-assign":"error","no-constant-condition":"error","no-control-regex":"error","no-debugger":"error","no-dupe-else-if":"error","no-dupe-keys":"error","no-duplicate-case":"error","no-empty":["error",{allowEmptyCatch:!0}],"no-empty-character-class":"error","no-ex-assign":"error","no-extra-boolean-cast":"warn","no-func-assign":"error","no-inner-declarations":"error","no-invalid-regexp":"error","no-irregular-whitespace":"error","no-misleading-character-class":"error","no-obj-calls":"error","no-prototype-builtins":"warn","no-regex-spaces":"warn","no-setter-return":"error","no-sparse-arrays":"error","no-template-curly-in-string":"error","no-unexpected-multiline":"error","no-unreachable":"error","no-unsafe-finally":"error","no-unsafe-negation":"error","require-atomic-updates":"error","use-isnan":"error","array-callback-return":"error","default-case":"error","dot-notation":"warn",eqeqeq:["error","smart"],"no-alert":"warn","no-console":["warn",{allow:["warn","error","info","group","groupEnd","table"]}],"no-case-declarations":"warn","no-constructor-return":"warn","no-else-return":["warn",{allowElseIf:!1}],"no-empty-pattern":"error","no-extend-native":"error","no-fallthrough":"warn","no-global-assign":"error","no-implicit-coercion":"warn","no-loop-func":"error","no-new":"warn","no-new-wrappers":"error","no-octal":"error","no-octal-escape":"error","no-param-reassign":["warn",{props:!1}],"no-proto":"error","no-redeclare":"error","no-return-assign":"warn","no-return-await":"warn","no-self-assign":"error","no-self-compare":"error","no-sequences":"error","no-unmodified-loop-condition":"error","no-unused-expressions":"warn","no-unused-labels":"error","no-useless-call":"warn","no-useless-catch":"warn","no-useless-escape":"warn","no-useless-return":"warn","no-void":"warn","no-with":"error",radix:"error",yoda:"warn","no-delete-var":"error","no-shadow-restricted-names":"error","no-undef":"error","no-undef-init":"warn","no-unused-vars":["warn",{ignoreRestSiblings:!0,varsIgnorePattern:"^_",argsIgnorePattern:"^_"}],"lines-between-class-members":["warn","always",{exceptAfterSingleLine:!0}],"no-lonely-if":"warn","no-bitwise":"warn","no-array-constructor":"warn","no-new-object":"warn","no-unneeded-ternary":"warn","operator-assignment":"warn","prefer-exponentiation-operator":"warn","constructor-super":"error","no-class-assign":"error","no-const-assign":"error","no-dupe-class-members":"error","no-new-symbol":"error","no-this-before-super":"error","no-useless-computed-key":"warn","no-useless-constructor":"warn","no-useless-rename":"warn","no-var":"error","object-shorthand":"warn","prefer-arrow-callback":"warn","prefer-const":"warn","prefer-rest-params":"warn","prefer-spread":"warn","require-yield":"error","unicorn/catch-error-name":"warn","unicorn/error-message":"warn","unicorn/escape-case":"warn","unicorn/explicit-length-check":"warn","unicorn/new-for-builtins":"error","unicorn/no-abusive-eslint-disable":"warn","unicorn/no-array-instanceof":"error","unicorn/no-console-spaces":"warn","unicorn/no-for-loop":"warn","unicorn/no-hex-escape":"warn","unicorn/no-nested-ternary":"warn","unicorn/no-new-buffer":"error","unicorn/no-unreadable-array-destructuring":"warn","unicorn/no-zero-fractions":"warn","unicorn/number-literal-case":"warn","unicorn/prefer-add-event-listener":"error","unicorn/prefer-dataset":"warn","unicorn/prefer-event-key":"error","unicorn/prefer-flat-map":"warn","unicorn/prefer-includes":"error","unicorn/prefer-negative-index":"warn","unicorn/prefer-node-append":"error","unicorn/prefer-node-remove":"error","unicorn/prefer-number-properties":"error","unicorn/prefer-query-selector":"error","unicorn/prefer-starts-ends-with":"error","unicorn/prefer-string-slice":"error","unicorn/prefer-text-content":"error","unicorn/prefer-trim-start-end":"warn","unicorn/prefer-type-error":"error","unicorn/prevent-abbreviations":["warn",{extendDefaultReplacements:!1,replacements:{arr:{array:!0},err:{error:!0},cb:{callback:!0},ctx:{context:!0},curr:{current:!0},el:{element:!0},elem:{element:!0},ext:{extension:!0},len:{length:!0},lib:{library:!0},msg:{message:!0},num:{number:!0},obj:{object:!0},opts:{options:!0},str:{string:!0},val:{value:!0}}}],"unicorn/throw-new-error":"error"}};module.exports=i;
